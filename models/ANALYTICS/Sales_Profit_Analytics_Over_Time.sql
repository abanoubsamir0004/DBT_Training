-- Sales Profit Analytics Over Time

WITH 

    DIM_ORDER AS (
        SELECT * FROM {{ ref('DIM_ORDER') }}
    ),

    DIM_DATE AS (
        SELECT * FROM {{ ref('DIM_DATE') }}
    ),

    FACT_SALES AS (
        SELECT * FROM {{ ref('FACT_SALES') }}
    ),

    SALES_PROFIT_ANALYTICS_YEAR AS (

        SELECT 

            'YEAR' AS DIMENSTION,
            DIM_DATE.YEAR,
            NULL AS QUARTER,
            NULL AS MONTH,
            COUNT(DISTINCT FACT_SALES.ORDER_KEY) AS TOTAL_ORDERS,

            ROUND(SUM(FACT_SALES.SALES),3) AS TOTAL_SALES,
            ROUND(SUM(FACT_SALES.PROFIT),3) AS TOTAL_PROFIT,

            ROUND(AVG(FACT_SALES.SALES),3) AS AVG_SALES,
            ROUND(AVG(FACT_SALES.PROFIT),3) AS AVG_PROFIT,

            ROUND(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY FACT_SALES.SALES) ,3) AS PERCENTILE_25_SALES,
            ROUND(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY FACT_SALES.PROFIT),3) AS PERCENTILE_25_PROFIT,

            ROUND(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY FACT_SALES.SALES),3) AS MEDIAN_SALES,
            ROUND(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY FACT_SALES.PROFIT),3) AS MEDIAN_PROFIT,

            ROUND(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY FACT_SALES.SALES),3) AS PERCENTILE_75_SALES,
            ROUND(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY FACT_SALES.PROFIT),3) AS PERCENTILE_75_PROFIT,

            ROUND(STDDEV(FACT_SALES.SALES),3) AS SALES_STD_DEVIATION,
            ROUND(STDDEV(FACT_SALES.PROFIT),3) AS PROFIT_STD_DEVIATION

    
        FROM FACT_SALES

        LEFT JOIN DIM_DATE
            ON FACT_SALES.ORDER_DATE_KEY = DIM_DATE.DATE_KEY

        GROUP BY 
            DIM_DATE.YEAR
    ),

    SALES_PROFIT_ANALYTICS_QUARTER AS (

        SELECT 

            'QUARTER' AS DIMENSTION,
            DIM_DATE.YEAR,
            DIM_DATE.QUARTER_NAME AS QUARTER,
            NULL AS MONTH,
            COUNT(DISTINCT FACT_SALES.ORDER_KEY) AS TOTAL_ORDERS,

            ROUND(SUM(FACT_SALES.SALES),3) AS TOTAL_SALES,
            ROUND(SUM(FACT_SALES.PROFIT),3) AS TOTAL_PROFIT,

            ROUND(AVG(FACT_SALES.SALES),3) AS AVG_SALES,
            ROUND(AVG(FACT_SALES.PROFIT),3) AS AVG_PROFIT,

            ROUND(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY FACT_SALES.SALES),3) AS PERCENTILE_25_SALES,
            ROUND(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY FACT_SALES.PROFIT),3) AS PERCENTILE_25_PROFIT,

            ROUND(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY FACT_SALES.SALES),3) AS MEDIAN_SALES,
            ROUND(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY FACT_SALES.PROFIT),3) AS MEDIAN_PROFIT,

            ROUND(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY FACT_SALES.SALES),3) AS PERCENTILE_75_SALES,
            ROUND(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY FACT_SALES.PROFIT),3) AS PERCENTILE_75_PROFIT,

            ROUND(STDDEV(FACT_SALES.SALES),3) AS SALES_STANDARD_DEVIATION,
            ROUND(STDDEV(FACT_SALES.PROFIT),3) AS PROFIT_STANDARD_DEVIATION


        FROM FACT_SALES

        LEFT JOIN DIM_DATE
            ON FACT_SALES.ORDER_DATE_KEY = DIM_DATE.DATE_KEY

        GROUP BY 
            DIM_DATE.YEAR, DIM_DATE.QUARTER_NAME
    ),

    SALES_PROFIT_ANALYTICS_MONTH AS (

        SELECT 

            'MONTH' AS DIMENSTION,
            DIM_DATE.YEAR,
            DIM_DATE.QUARTER_NAME AS QUARTER,
            DIM_DATE.MONTH AS MONTH,
            COUNT(DISTINCT FACT_SALES.ORDER_KEY) AS TOTAL_ORDERS,

            ROUND(SUM(FACT_SALES.SALES),3) AS TOTAL_SALES,
            ROUND(SUM(FACT_SALES.PROFIT),3) AS TOTAL_PROFIT,

            ROUND(AVG(FACT_SALES.SALES),3) AS AVG_SALES,
            ROUND(AVG(FACT_SALES.PROFIT),3) AS AVG_PROFIT,

            ROUND(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY FACT_SALES.SALES),3) AS PERCENTILE_25_SALES,
            ROUND(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY FACT_SALES.PROFIT),3) AS PERCENTILE_25_PROFIT,

            ROUND(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY FACT_SALES.SALES),3) AS MEDIAN_SALES,
            ROUND(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY FACT_SALES.PROFIT),3) AS MEDIAN_PROFIT,
            
            ROUND(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY FACT_SALES.SALES),3) AS PERCENTILE_75_SALES,
            ROUND(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY FACT_SALES.PROFIT),3) AS PERCENTILE_75_PROFIT,

            ROUND(STDDEV(FACT_SALES.SALES),3) AS SALES_STANDARD_DEVIATION,
            ROUND(STDDEV(FACT_SALES.PROFIT),3) AS PROFIT_STANDARD_DEVIATION


        FROM FACT_SALES

        LEFT JOIN DIM_DATE
            ON FACT_SALES.ORDER_DATE_KEY = DIM_DATE.DATE_KEY

        GROUP BY 
            DIM_DATE.YEAR, DIM_DATE.QUARTER_NAME, DIM_DATE.MONTH
    ),

    SALES_PROFIT_ANALYTICS_OVER_TIME AS
    (
        SELECT * 

        FROM SALES_PROFIT_ANALYTICS_YEAR

        UNION

        SELECT * 

        FROM SALES_PROFIT_ANALYTICS_QUARTER

        UNION

        SELECT * 

        FROM SALES_PROFIT_ANALYTICS_MONTH
    )

SELECT * 
FROM SALES_PROFIT_ANALYTICS_OVER_TIME
ORDER BY  DIMENSTION, YEAR, QUARTER, MONTH

